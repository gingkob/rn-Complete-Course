{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/vladica/Documents/learning/rn-Complete-Course/App.js\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Icon from \"@expo/vector-icons/AntDesign\";\nexport default function App() {\n  var _this = this;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      text = _useState2[0],\n      setText = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      goals = _useState4[0],\n      setGoal = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      finishedGoals = _useState6[0],\n      setFinishedGoal = _useState6[1];\n\n  var addGoal = function addGoal() {\n    setGoal(function (goals) {\n      return [{\n        key: Math.random().toString(),\n        value: text\n      }].concat(_toConsumableArray(goals));\n    });\n    setText(\"\");\n  };\n\n  var removeGoal = function removeGoal(index) {\n    var goal = goals.filter(function (item) {\n      return item.key != index;\n    });\n    setGoal(goal);\n  };\n\n  var completeGoal = function completeGoal(index) {\n    var finishedGoal = goals.filter(function (item) {\n      return item.key == index;\n    });\n    setFinishedGoal(function (finishedGoals) {\n      return [finishedGoal].concat(_toConsumableArray(finishedGoals));\n    });\n    var goal = goals.filter(function (item) {\n      return item.key != index;\n    });\n    setGoal(goal);\n  };\n\n  var finishedGoalsContainer = finishedGoals.length ? React.createElement(FlatList, {\n    data: finishedGoals,\n    renderItem: function renderItem(itemData) {\n      return React.createElement(View, {\n        style: {\n          flexDirection: \"row\",\n          alignContent: \"space-around\",\n          justifyContent: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: styles.goalFinishedText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }\n      }, itemData.item.value));\n    },\n    extraData: finishedGoals,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }) : null;\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.header,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    style: styles.textInput,\n    placeholder: \"Course Goal\",\n    value: text,\n    onChangeText: function onChangeText(text) {\n      return setText(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    title: \"Click me!\",\n    onPress: addGoal,\n    color: \"green\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  })), React.createElement(FlatList, {\n    data: goals,\n    renderItem: function renderItem(itemData) {\n      return React.createElement(View, {\n        style: {\n          flexDirection: \"row\",\n          alignContent: \"space-around\",\n          justifyContent: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.goalText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }\n      }, itemData.item.value, \" \"), React.createElement(Icon.Button, {\n        name: \"checksquareo\",\n        size: 30,\n        color: \"green\",\n        style: styles.checkMark,\n        backgroundColor: \"none\",\n        onPress: completeGoal.bind(_this, itemData.item.key),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }\n      }), React.createElement(Icon.Button, {\n        name: \"minussquare\",\n        size: 30,\n        color: \"red\",\n        style: styles.deleteMark,\n        backgroundColor: \"none\",\n        onPress: removeGoal.bind(_this, itemData.item.key),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }\n      }));\n    },\n    extraData: goals,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }), finishedGoalsContainer);\n}\nvar styles = StyleSheet.create({\n  container: {\n    padding: 30\n  },\n  header: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-evenly\",\n    marginVertical: 10\n  },\n  body: {\n    marginVertical: 10\n  },\n  textInput: {\n    width: \"70%\",\n    borderBottomColor: \"green\",\n    borderBottomWidth: 3\n  },\n  goalText: {\n    backgroundColor: '#B2FFFF',\n    borderRadius: 5,\n    marginVertical: 5,\n    padding: 10,\n    flex: 4\n  },\n  goalFinishedText: {\n    backgroundColor: '#B2FFFF',\n    borderRadius: 5,\n    marginVertical: 5,\n    padding: 10,\n    flex: 4,\n    textDecorationLine: \"line-through\"\n  },\n  checkMark: {\n    flex: 1\n  },\n  deleteMark: {\n    flex: 1\n  }\n});","map":{"version":3,"sources":["/home/vladica/Documents/learning/rn-Complete-Course/App.js"],"names":["React","useState","Icon","App","text","setText","goals","setGoal","finishedGoals","setFinishedGoal","addGoal","key","Math","random","toString","value","removeGoal","index","goal","filter","item","completeGoal","finishedGoal","finishedGoalsContainer","length","itemData","flexDirection","alignContent","justifyContent","styles","goalFinishedText","container","header","textInput","goalText","checkMark","bind","deleteMark","StyleSheet","create","padding","alignItems","marginVertical","body","width","borderBottomColor","borderBottomWidth","backgroundColor","borderRadius","flex","textDecorationLine"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;;AAEA,OAAOC,IAAP;AAGA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAAA,kBAEJF,QAAQ,CAAC,EAAD,CAFJ;AAAA;AAAA,MAErBG,IAFqB;AAAA,MAEfC,OAFe;;AAAA,mBAGHJ,QAAQ,CAAC,EAAD,CAHL;AAAA;AAAA,MAGrBK,KAHqB;AAAA,MAGdC,OAHc;;AAAA,mBAIaN,QAAQ,CAAC,EAAD,CAJrB;AAAA;AAAA,MAIrBO,aAJqB;AAAA,MAINC,eAJM;;AAM5B,MAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpBH,IAAAA,OAAO,CAAC,UAAAD,KAAK;AAAA,cAAK;AAAEK,QAAAA,GAAG,EAAEC,IAAI,CAACC,MAAL,GAAcC,QAAd,EAAP;AAAiCC,QAAAA,KAAK,EAAEX;AAAxC,OAAL,4BAAwDE,KAAxD;AAAA,KAAN,CAAP;AACAD,IAAAA,OAAO,CAAC,EAAD,CAAP;AACD,GAHD;;AASA,MAAMW,UAAU,GAAG,SAAbA,UAAa,CAAAC,KAAK,EAAI;AAC1B,QAAIC,IAAI,GAAGZ,KAAK,CAACa,MAAN,CAAa,UAAAC,IAAI;AAAA,aAAIA,IAAI,CAACT,GAAL,IAAYM,KAAhB;AAAA,KAAjB,CAAX;AACAV,IAAAA,OAAO,CAACW,IAAD,CAAP;AACD,GAHD;;AAKA,MAAMG,YAAY,GAAG,SAAfA,YAAe,CAAAJ,KAAK,EAAI;AAC5B,QAAIK,YAAY,GAAGhB,KAAK,CAACa,MAAN,CAAa,UAAAC,IAAI;AAAA,aAAIA,IAAI,CAACT,GAAL,IAAYM,KAAhB;AAAA,KAAjB,CAAnB;AACAR,IAAAA,eAAe,CAAC,UAAAD,aAAa;AAAA,cAAKc,YAAL,4BAAsBd,aAAtB;AAAA,KAAd,CAAf;AACA,QAAIU,IAAI,GAAGZ,KAAK,CAACa,MAAN,CAAa,UAAAC,IAAI;AAAA,aAAIA,IAAI,CAACT,GAAL,IAAYM,KAAhB;AAAA,KAAjB,CAAX;AACAV,IAAAA,OAAO,CAACW,IAAD,CAAP;AACD,GALD;;AAOA,MAAMK,sBAAsB,GAAGf,aAAa,CAACgB,MAAd,GAC7B,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEhB,aAAhB;AAA+B,IAAA,UAAU,EAAE,oBAAAiB,QAAQ;AAAA,aACjD,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,aAAa,EAAE,KAAjB;AAAwBC,UAAAA,YAAY,EAAE,cAAtC;AAAsDC,UAAAA,cAAc,EAAE;AAAtE,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,gBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGL,QAAQ,CAACL,IAAT,CAAcL,KADjB,CADF,CADiD;AAAA,KAAnD;AAOA,IAAA,SAAS,EAAEP,aAPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD6B,GAU3B,IAVJ;AAeA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEqB,MAAM,CAACE,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEF,MAAM,CAACG,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEH,MAAM,CAACI,SAAzB;AAAoC,IAAA,WAAW,EAAC,aAAhD;AAA8D,IAAA,KAAK,EAAE7B,IAArE;AAA2E,IAAA,YAAY,EAAE,sBAACA,IAAD;AAAA,aAAUC,OAAO,CAACD,IAAD,CAAjB;AAAA,KAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,WAAd;AAA0B,IAAA,OAAO,EAAEM,OAAnC;AAA4C,IAAA,KAAK,EAAC,OAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAKE,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEJ,KAAhB;AAAuB,IAAA,UAAU,EAAE,oBAAAmB,QAAQ;AAAA,aACzC,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,aAAa,EAAE,KAAjB;AAAwBC,UAAAA,YAAY,EAAE,cAAtC;AAAsDC,UAAAA,cAAc,EAAE;AAAtE,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACK,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+BT,QAAQ,CAACL,IAAT,CAAcL,KAA7C,MADF,EAGE,oBAAC,IAAD,CAAM,MAAN;AACE,QAAA,IAAI,EAAC,cADP;AAEE,QAAA,IAAI,EAAE,EAFR;AAGE,QAAA,KAAK,EAAC,OAHR;AAIE,QAAA,KAAK,EAAEc,MAAM,CAACM,SAJhB;AAKE,QAAA,eAAe,EAAC,MALlB;AAME,QAAA,OAAO,EAAEd,YAAY,CAACe,IAAb,CAAkB,KAAlB,EAAwBX,QAAQ,CAACL,IAAT,CAAcT,GAAtC,CANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAWE,oBAAC,IAAD,CAAM,MAAN;AACE,QAAA,IAAI,EAAC,aADP;AAEE,QAAA,IAAI,EAAE,EAFR;AAGE,QAAA,KAAK,EAAC,KAHR;AAIE,QAAA,KAAK,EAAEkB,MAAM,CAACQ,UAJhB;AAKE,QAAA,eAAe,EAAC,MALlB;AAME,QAAA,OAAO,EAAErB,UAAU,CAACoB,IAAX,CAAgB,KAAhB,EAAsBX,QAAQ,CAACL,IAAT,CAAcT,GAApC,CANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXF,CADyC;AAAA,KAA3C;AAqBE,IAAA,SAAS,EAAEL,KArBb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EA2BMiB,sBA3BN,CADF;AA+BD;AAED,IAAMM,MAAM,GAAGS,UAAU,CAACC,MAAX,CAAkB;AAC/BR,EAAAA,SAAS,EAAE;AACTS,IAAAA,OAAO,EAAE;AADA,GADoB;AAI/BR,EAAAA,MAAM,EAAE;AACNN,IAAAA,aAAa,EAAE,KADT;AAENe,IAAAA,UAAU,EAAE,QAFN;AAGNb,IAAAA,cAAc,EAAE,cAHV;AAINc,IAAAA,cAAc,EAAE;AAJV,GAJuB;AAU/BC,EAAAA,IAAI,EAAE;AACJD,IAAAA,cAAc,EAAE;AADZ,GAVyB;AAa/BT,EAAAA,SAAS,EAAE;AACTW,IAAAA,KAAK,EAAE,KADE;AAETC,IAAAA,iBAAiB,EAAE,OAFV;AAGTC,IAAAA,iBAAiB,EAAE;AAHV,GAboB;AAkB/BZ,EAAAA,QAAQ,EAAE;AACRa,IAAAA,eAAe,EAAE,SADT;AAERC,IAAAA,YAAY,EAAE,CAFN;AAGRN,IAAAA,cAAc,EAAE,CAHR;AAIRF,IAAAA,OAAO,EAAE,EAJD;AAKRS,IAAAA,IAAI,EAAE;AALE,GAlBqB;AAyB/BnB,EAAAA,gBAAgB,EAAE;AAChBiB,IAAAA,eAAe,EAAE,SADD;AAEhBC,IAAAA,YAAY,EAAE,CAFE;AAGhBN,IAAAA,cAAc,EAAE,CAHA;AAIhBF,IAAAA,OAAO,EAAE,EAJO;AAKhBS,IAAAA,IAAI,EAAE,CALU;AAMhBC,IAAAA,kBAAkB,EAAE;AANJ,GAzBa;AAiC/Bf,EAAAA,SAAS,EAAE;AACTc,IAAAA,IAAI,EAAE;AADG,GAjCoB;AAoC/BZ,EAAAA,UAAU,EAAE;AACVY,IAAAA,IAAI,EAAE;AADI;AApCmB,CAAlB,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport { StyleSheet, Text, View, Button, TextInput, FlatList } from 'react-native';\nimport Icon from 'react-native-vector-icons/AntDesign';\n\n\nexport default function App() {\n\n  const [text, setText] = useState(\"\")\n  const [goals, setGoal] = useState([])\n  const [finishedGoals, setFinishedGoal] = useState([])\n\n  const addGoal = () => {\n    setGoal(goals => [{ key: Math.random().toString(), value: text }, ...goals])\n    setText(\"\")\n  }\n\n  /*  const finishGoal = (finishedGoal) => {\n     setFinishedGoal(finishedGoals => [...finishedGoals, finishedGoal])\n   } */\n\n  const removeGoal = index => {\n    let goal = goals.filter(item => item.key != index)\n    setGoal(goal)\n  }\n\n  const completeGoal = index => {\n    let finishedGoal = goals.filter(item => item.key == index)\n    setFinishedGoal(finishedGoals => [finishedGoal, ...finishedGoals])\n    let goal = goals.filter(item => item.key != index)\n    setGoal(goal)\n  }\n\n  const finishedGoalsContainer = finishedGoals.length ?\n    <FlatList data={finishedGoals} renderItem={itemData => (\n      <View style={{ flexDirection: \"row\", alignContent: \"space-around\", justifyContent: \"center\" }}>\n        <Text style={styles.goalFinishedText}>\n          {itemData.item.value}\n        </Text>\n      </View>)\n    }\n    extraData={finishedGoals}\n    />\n    : null\n\n  // let allGoals = goals.map((goal, index) => <Text style={styles.goalText} key={index} onPress={index =>removeGoal(index)}>{index + 1}. {goal}</Text>).reverse()\n  // const checkIcon = <Icon name=\"checksquareo\" size={30} color=\"#900\" style={styles.checkMark}/>;\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.header}>\n        <TextInput style={styles.textInput} placeholder=\"Course Goal\" value={text} onChangeText={(text) => setText(text)} />\n        <Button title=\"Click me!\" onPress={addGoal} color=\"green\" />\n      </View>\n      <FlatList data={goals} renderItem={itemData => (\n        <View style={{ flexDirection: \"row\", alignContent: \"space-around\", justifyContent: \"center\" }}>\n          <Text style={styles.goalText}>{itemData.item.value} </Text>\n          {/* {checkIcon}  */}\n          <Icon.Button\n            name=\"checksquareo\"\n            size={30}\n            color=\"green\"\n            style={styles.checkMark}\n            backgroundColor=\"none\"\n            onPress={completeGoal.bind(this, itemData.item.key)}>\n          </Icon.Button>\n          <Icon.Button\n            name=\"minussquare\"\n            size={30}\n            color=\"red\"\n            style={styles.deleteMark}\n            backgroundColor=\"none\"\n            onPress={removeGoal.bind(this, itemData.item.key)}>\n          </Icon.Button>\n        </View>)}\n        extraData={goals} />\n        { finishedGoalsContainer }\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 30\n  },\n  header: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-evenly\",\n    marginVertical: 10,\n  },\n  body: {\n    marginVertical: 10,\n  },\n  textInput: {\n    width: \"70%\",\n    borderBottomColor: \"green\",\n    borderBottomWidth: 3\n  },\n  goalText: {\n    backgroundColor: '#B2FFFF',\n    borderRadius: 5,\n    marginVertical: 5,\n    padding: 10,\n    flex: 4\n  },\n  goalFinishedText: {\n    backgroundColor: '#B2FFFF',\n    borderRadius: 5,\n    marginVertical: 5,\n    padding: 10,\n    flex: 4,\n    textDecorationLine: \"line-through\"\n  },\n  checkMark: {\n    flex: 1\n  },\n  deleteMark: {\n    flex: 1\n  }\n});\n"]},"metadata":{},"sourceType":"module"}