{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/vladica/Documents/learning/rn-Complete-Course/App.js\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nexport default function App() {\n  var _this = this;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      text = _useState2[0],\n      setText = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      goals = _useState4[0],\n      setGoal = _useState4[1];\n\n  var addGoal = function addGoal() {\n    setGoal(function (goals) {\n      return [].concat(_toConsumableArray(goals), [{\n        key: Math.random().toString(),\n        value: text\n      }]);\n    });\n    setText(\"\");\n  };\n\n  var removeGoal = function removeGoal(index) {\n    var goal = goals.filter(function (item) {\n      return item.key != index;\n    });\n    setGoal(goal);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.header,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    style: styles.textInput,\n    placeholder: \"Course Goal\",\n    value: text,\n    onChangeText: function onChangeText(text) {\n      return setText(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    title: \"Click me!\",\n    onPress: addGoal,\n    color: \"green\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  })), React.createElement(FlatList, {\n    data: goals,\n    renderItem: function renderItem(itemData) {\n      return React.createElement(Text, {\n        style: styles.goalText,\n        onPress: removeGoal.bind(_this, itemData.item.key),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 52\n        }\n      }, itemData.item.value);\n    },\n    extraData: goals,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 3\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    padding: 30\n  },\n  header: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-evenly\",\n    marginVertical: 10\n  },\n  body: {\n    marginVertical: 10\n  },\n  textInput: {\n    width: \"70%\",\n    borderBottomColor: \"green\",\n    borderBottomWidth: 3\n  },\n  goalText: {\n    backgroundColor: '#B2FFFF',\n    borderRadius: 5,\n    marginVertical: 5,\n    padding: 10\n  }\n});","map":{"version":3,"sources":["/home/vladica/Documents/learning/rn-Complete-Course/App.js"],"names":["React","useState","App","text","setText","goals","setGoal","addGoal","key","Math","random","toString","value","removeGoal","index","goal","filter","item","styles","container","header","textInput","itemData","goalText","bind","StyleSheet","create","padding","flexDirection","alignItems","justifyContent","marginVertical","body","width","borderBottomColor","borderBottomWidth","backgroundColor","borderRadius"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { StyleSheet, Text, View, Button, TextInput, FlatList } from 'react-native';\n\nexport default function App() {\n\n  const [text, setText] = useState(\"\")\n  const [goals, setGoal ] = useState([])\n\n  const addGoal = () => {\n    setGoal(goals =>[...goals, {key: Math.random().toString(), value:text}])\n    setText(\"\")\n  }\n\n  const removeGoal = index =>{\n       \n    let goal = goals.filter(item => item.key != index)\n    setGoal(goal)\n  }\n\n  // let allGoals = goals.map((goal, index) => <Text style={styles.goalText} key={index} onPress={index =>removeGoal(index)}>{index + 1}. {goal}</Text>).reverse()\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.header}>\n        <TextInput style={styles.textInput} placeholder=\"Course Goal\" value={text} onChangeText={(text)=>setText(text)}/>\n        <Button title=\"Click me!\" onPress={addGoal} color=\"green\"/>\n      </View>\n  <FlatList data={goals} renderItem={ itemData =>( <Text style={styles.goalText} onPress={removeGoal.bind(this, itemData.item.key)}>{itemData.item.value}</Text>)} extraData={goals} />   \n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding:30\n  },\n  header: {\n    flexDirection:\"row\",\n    alignItems: \"center\",\n    justifyContent:\"space-evenly\",\n    marginVertical:10,\n  },\n  body: {\n    marginVertical:10,\n  },\n  textInput: {\n    width: \"70%\",\n    borderBottomColor: \"green\",\n    borderBottomWidth:3\n  },\n  goalText: {\n    backgroundColor: '#B2FFFF',\n    borderRadius: 5,\n    marginVertical:5,\n    padding:10,\n  }\n});\n"]},"metadata":{},"sourceType":"module"}