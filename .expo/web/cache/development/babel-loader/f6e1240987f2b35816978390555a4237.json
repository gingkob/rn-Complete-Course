{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/vladica/Documents/learning/rn-Complete-Course/App.js\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Icon from \"@expo/vector-icons/AntDesign\";\nexport default function App() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      text = _useState2[0],\n      setText = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      goals = _useState4[0],\n      setGoal = _useState4[1];\n\n  var addGoal = function addGoal() {\n    setGoal(function (goals) {\n      return [].concat(_toConsumableArray(goals), [{\n        key: Math.random().toString(),\n        value: text\n      }]);\n    });\n    setText(\"\");\n  };\n\n  var removeGoal = function removeGoal(index) {\n    var goal = goals.filter(function (item) {\n      return item.key != index;\n    });\n    setGoal(goal);\n  };\n\n  var deleteIcon = React.createElement(Icon.Button, {\n    name: \"minussquare\",\n    size: 30,\n    color: \"red\",\n    style: styles.deleteMark,\n    onPress: removeGoal.bind(this, itemData.item.key),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 22\n    }\n  });\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.header,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    style: styles.textInput,\n    placeholder: \"Course Goal\",\n    value: text,\n    onChangeText: function onChangeText(text) {\n      return setText(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    title: \"Click me!\",\n    onPress: addGoal,\n    color: \"green\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  })), React.createElement(FlatList, {\n    data: goals,\n    renderItem: function renderItem(itemData) {\n      return React.createElement(View, {\n        style: {\n          flexDirection: \"row\",\n          alignContent: \"center\",\n          justifyContent: \"space-evenly\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 52\n        }\n      }, React.createElement(Text, {\n        style: styles.goalText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 142\n        }\n      }, itemData.item.value, \" \"), deleteIcon);\n    },\n    extraData: goals,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 3\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    padding: 30\n  },\n  header: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-evenly\",\n    marginVertical: 10\n  },\n  body: {\n    marginVertical: 10\n  },\n  textInput: {\n    width: \"70%\",\n    borderBottomColor: \"green\",\n    borderBottomWidth: 3\n  },\n  goalText: {\n    backgroundColor: '#B2FFFF',\n    borderRadius: 5,\n    marginVertical: 5,\n    padding: 10,\n    flex: 4\n  },\n  checkMark: {\n    flex: 1\n  },\n  deleteMark: {\n    flex: 1\n  }\n});","map":{"version":3,"sources":["/home/vladica/Documents/learning/rn-Complete-Course/App.js"],"names":["React","useState","Icon","App","text","setText","goals","setGoal","addGoal","key","Math","random","toString","value","removeGoal","index","goal","filter","item","deleteIcon","styles","deleteMark","bind","itemData","container","header","textInput","flexDirection","alignContent","justifyContent","goalText","StyleSheet","create","padding","alignItems","marginVertical","body","width","borderBottomColor","borderBottomWidth","backgroundColor","borderRadius","flex","checkMark"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { StyleSheet, Text, View, Button, TextInput, FlatList } from 'react-native';\nimport Icon from 'react-native-vector-icons/AntDesign';\n\n\nexport default function App() {\n\n  const [text, setText] = useState(\"\")\n  const [goals, setGoal ] = useState([])\n  const addGoal = () => {\n    setGoal(goals =>[...goals, {key: Math.random().toString(), value:text}])\n    setText(\"\")\n  }\n  \n  const removeGoal = index =>{\n    \n    let goal = goals.filter(item => item.key != index)\n    setGoal(goal)\n  }\n  \n  // let allGoals = goals.map((goal, index) => <Text style={styles.goalText} key={index} onPress={index =>removeGoal(index)}>{index + 1}. {goal}</Text>).reverse()\n  // const checkIcon = <Icon name=\"checksquareo\" size={30} color=\"#900\" style={styles.checkMark}/>;\n  const deleteIcon = <Icon.Button name=\"minussquare\" size={30} color=\"red\" style={styles.deleteMark} onPress={removeGoal.bind(this, itemData.item.key)}/>;\n  \n  return (\n    <View style={styles.container}>\n      <View style={styles.header}>\n        <TextInput style={styles.textInput} placeholder=\"Course Goal\" value={text} onChangeText={(text)=>setText(text)}/>\n        <Button title=\"Click me!\" onPress={addGoal} color=\"green\"/>\n      </View>\n  <FlatList data={goals} renderItem={ itemData =>( <View style={{flexDirection:\"row\", alignContent:\"center\", justifyContent:\"space-evenly\"}}><Text style={styles.goalText}>{itemData.item.value} </Text>{/* {checkIcon}  */}{deleteIcon}</View>)} extraData={goals} />   \n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding:30\n  },\n  header: {\n    flexDirection:\"row\",\n    alignItems: \"center\",\n    justifyContent:\"space-evenly\",\n    marginVertical:10,\n  },\n  body: {\n    marginVertical:10,\n  },\n  textInput: {\n    width: \"70%\",\n    borderBottomColor: \"green\",\n    borderBottomWidth:3\n  },\n  goalText: {\n    backgroundColor: '#B2FFFF',\n    borderRadius: 5,\n    marginVertical:5,\n    padding:10,\n    flex: 4\n  },\n  checkMark: {\n    flex:1\n  },\n  deleteMark: {\n    flex:1\n  }\n});\n"]},"metadata":{},"sourceType":"module"}